{"version":3,"file":"component---src-pages-index-js-845323f2f462f2746ab4.js","mappings":"yQAQA,SAASA,EAAiBC,EAAOC,EAAgBC,EAAYC,EAAeC,GAC1E,IAAIC,EAAsC,oBAAXC,aAAuD,IAAtBA,OAAOJ,WAEnEK,EAAkB,YAAe,WACnC,OAAIH,GAASC,EACJH,EAAWF,GAAOQ,QAGvBL,EACKA,EAAcH,GAAOQ,QAOvBP,KAELQ,GAAmB,OAAeF,EAAiB,GACnDG,EAAQD,EAAiB,GACzBE,EAAWF,EAAiB,GA4BhC,OA1BA,EAAAG,EAAA,IAAkB,WAChB,IAAIC,GAAS,EAEb,GAAKR,EAAL,CAIA,IAAIS,EAAYZ,EAAWF,GAEvBe,EAAc,WAIZF,GACFF,EAASG,EAAUN,UAOvB,OAHAO,IAEAD,EAAUE,YAAYD,GACf,WACLF,GAAS,EACTC,EAAUG,eAAeF,OAE1B,CAACf,EAAOE,EAAYG,IAChBK,EAIT,IAAIQ,EAAiC,EAAiC,qBAEtE,SAASC,EAAiBnB,EAAOC,EAAgBC,EAAYC,GAC3D,IAAIiB,EAAqB,eAAkB,WACzC,OAAOnB,IACN,CAACA,IACAoB,EAAoB,WAAc,WACpC,GAAsB,OAAlBlB,EAAwB,CAC1B,IACIK,EADiBL,EAAcH,GACNQ,QAE7B,OAAO,WACL,OAAOA,GAIX,OAAOY,IACN,CAACA,EAAoBpB,EAAOG,IAE3BmB,EAAiB,WAAc,WACjC,GAAmB,OAAfpB,EACF,MAAO,CAACkB,EAAoB,WAC1B,OAAO,eAIX,IAAIG,EAAiBrB,EAAWF,GAChC,MAAO,CAAC,WACN,OAAOuB,EAAef,SACrB,SAAUgB,GAGX,OADAD,EAAeP,YAAYQ,GACpB,WACLD,EAAeN,eAAeO,QAGjC,CAACJ,EAAoBlB,EAAYF,IAChCyB,GAAkB,OAAeH,EAAgB,GACjDI,EAAcD,EAAgB,GAC9BE,EAAYF,EAAgB,GAGhC,OADYP,EAA+BS,EAAWD,EAAaL,GCpG9D,ICuDP,EAhDkB,WAChB,IAAMb,EFgGO,SAAuBoB,GACpC,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC9EG,GAAQ,SAKR5B,EAAsC,oBAAXC,aAAuD,IAAtBA,OAAOJ,WAEnEgC,GAAiB,EAAAC,EAAA,GAAc,CACjCC,KAAM,mBACNC,MAAOR,EACPI,MAAOA,IAELK,EAAwBJ,EAAejC,eACvCA,OAA2C,IAA1BqC,GAA2CA,EAC5DC,EAAwBL,EAAehC,WACvCA,OAAuC,IAA1BqC,EAAmClC,EAAoBC,OAAOJ,WAAa,KAAOqC,EAC/FC,EAAwBN,EAAe/B,cACvCA,OAA0C,IAA1BqC,EAAmC,KAAOA,EAC1DpC,EAAQ8B,EAAe9B,MAQvBJ,EAA8B,mBAAf4B,EAA4BA,EAAWK,GAASL,EAcnE,OAbA5B,EAAQA,EAAMyC,QAAQ,eAAgB,UAE+BT,IAAnCd,EAA+CC,EAAmBpB,GAC5DC,EAAOC,EAAgBC,EAAYC,EAAeC,GEhI1EsC,CAAc,qBAE9B,OACEC,EAAAA,cAACC,EAAAA,EAAD,CAAKC,UDXQ,2BCWmBC,GAAI,CAAEC,gBAAiB,iBACrDJ,EAAAA,cAAAA,MAAAA,CAAKE,UDXW,iCCYbrC,EACCmC,EAAAA,cAACK,EAAAA,EAAD,CACEC,IAAI,sBACJC,IAAI,qBACJC,OAAQ,IAHV,qBAMAR,EAAAA,cAACK,EAAAA,EAAD,CACEC,IAAI,sBACJC,IAAI,qBACJC,OAAQ,IAHV,sBAMFR,EAAAA,cAAAA,MAAAA,CAAKE,UDxBkB,0CCyBrBF,EAAAA,cAACS,EAAAA,EAAD,CACEC,UAAU,MACVC,QAAS9C,EAAU,KAAO,KAC1B+C,MAAM,SAENZ,EAAAA,cAAAA,IAAAA,KAAAA,sBAEFA,EAAAA,cAACS,EAAAA,EAAD,CACEC,UAAU,MACVC,QAAS9C,EAAU,KAAO,KAC1B+C,MAAM,SAHR,MAKKZ,EAAAA,cAAAA,IAAAA,KAAAA,oBAITA,EAAAA,cAAAA,MAAAA,CAAKE,UDxCgB,sCCyCnBF,EAAAA,cAACa,EAAAA,GAAD,CAAMC,GAAG,WAAWX,GAAI,CAAES,MAAO,UAAjC,WAGAZ,EAAAA,cAACa,EAAAA,GAAD,CAAMC,GAAG,QAAQX,GAAI,CAAES,MAAO,UAA9B,Y","sources":["webpack://monroelpin.org/./node_modules/@mui/material/useMediaQuery/useMediaQuery.js","webpack://monroelpin.org/./src/pages/index.module.css","webpack://monroelpin.org/./src/pages/index.js"],"sourcesContent":["import _slicedToArray from \"/Users/matthewbatman/projects/lpmc/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _React$useState = React.useState(function () {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      match = _React$useState2[0],\n      setMatch = _React$useState2[1];\n\n  useEnhancedEffect(function () {\n    var active = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch(); // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n} // eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\n\n\nvar maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  var getDefaultSnapshot = React.useCallback(function () {\n    return defaultMatches;\n  }, [defaultMatches]);\n  var getServerSnapshot = React.useMemo(function () {\n    if (ssrMatchMedia !== null) {\n      var _ssrMatchMedia = ssrMatchMedia(query),\n          matches = _ssrMatchMedia.matches;\n\n      return function () {\n        return matches;\n      };\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n\n  var _React$useMemo = React.useMemo(function () {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, function () {\n        return function () {};\n      }];\n    }\n\n    var mediaQueryList = matchMedia(query);\n    return [function () {\n      return mediaQueryList.matches;\n    }, function (notify) {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return function () {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      getSnapshot = _React$useMemo2[0],\n      subscribe = _React$useMemo2[1];\n\n  var match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _getThemeProps = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme: theme\n  }),\n      _getThemeProps$defaul = _getThemeProps.defaultMatches,\n      defaultMatches = _getThemeProps$defaul === void 0 ? false : _getThemeProps$defaul,\n      _getThemeProps$matchM = _getThemeProps.matchMedia,\n      matchMedia = _getThemeProps$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _getThemeProps$matchM,\n      _getThemeProps$ssrMat = _getThemeProps.ssrMatchMedia,\n      ssrMatchMedia = _getThemeProps$ssrMat === void 0 ? null : _getThemeProps$ssrMat,\n      noSsr = _getThemeProps.noSsr;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n\n  var useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  var match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query: query,\n      match: match\n    });\n  }\n\n  return match;\n}","// extracted by mini-css-extract-plugin\nexport var Box = \"index-module--Box--IwybA\";\nexport var HomeLogo = \"index-module--HomeLogo--dahhG\";\nexport var HomeLogoTextBlock = \"index-module--HomeLogoTextBlock--8XUy6\";\nexport var HomeLinkBlock = \"index-module--HomeLinkBlock--HnEEA\";","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { Link } from 'gatsby-theme-material-ui';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport * as homeStyles from './index.module.css';\n\nconst IndexPage = () => {\n  const matches = useMediaQuery('(min-width:600px)');\n\n  return (\n    <Box className={homeStyles.Box} sx={{ backgroundColor: 'primary.main' }}>\n      <div className={homeStyles.HomeLogo}>\n        {matches ? (\n          <StaticImage\n            src=\"../images/torch.svg\"\n            alt=\"liberty torch icon\"\n            height={200}\n          />\n        ) : (\n          <StaticImage\n            src=\"../images/torch.svg\"\n            alt=\"liberty torch icon\"\n            height={125}\n          />\n        )}\n        <div className={homeStyles.HomeLogoTextBlock}>\n          <Typography\n            component=\"div\"\n            variant={matches ? 'h2' : 'h4'}\n            color=\"white\"\n          >\n            <b>Libertarian Party</b>\n          </Typography>\n          <Typography\n            component=\"div\"\n            variant={matches ? 'h2' : 'h4'}\n            color=\"white\"\n          >\n            of <b>Monroe County</b>\n          </Typography>\n        </div>\n      </div>\n      <div className={homeStyles.HomeLinkBlock}>\n        <Link to=\"/contact\" sx={{ color: 'white' }}>\n          Contact\n        </Link>\n        <Link to=\"/blog\" sx={{ color: 'white' }}>\n          Blog\n        </Link>\n      </div>\n    </Box>\n  );\n};\n\nexport default IndexPage;\n"],"names":["useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","supportMatchMedia","window","_React$useState","matches","_React$useState2","match","setMatch","useEnhancedEffect","active","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","_React$useMemo","mediaQueryList","notify","_React$useMemo2","getSnapshot","subscribe","queryInput","options","arguments","length","undefined","theme","_getThemeProps","getThemeProps","name","props","_getThemeProps$defaul","_getThemeProps$matchM","_getThemeProps$ssrMat","replace","useMediaQuery","React","Box","className","sx","backgroundColor","StaticImage","src","alt","height","Typography","component","variant","color","Link","to"],"sourceRoot":""}